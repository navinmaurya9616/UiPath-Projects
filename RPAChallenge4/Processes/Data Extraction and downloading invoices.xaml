<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_URL" Type="InArgument(x:String)" />
    <x:Property Name="in_SaveFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_ExtractedImagePath" Type="InArgument(x:String)" />
    <x:Property Name="out_DueDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_ID" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1132,7137</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="108">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="1142,7072" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="DT" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT1" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DataTable="[DT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1100,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;DueDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <ui:BuildDataTable DataTable="[DT1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1100,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="1100,6472" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[in_URL]">
      <ui:OpenBrowser.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1066,6370" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="PageExist" />
              <Variable x:TypeArguments="x:Boolean" Name="PageExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1024,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;Rpa challenge 4 website opened&quot;]" />
            <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="1024,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
            <ui:UiElementExists DisplayName="Element Exists 'P'" Exists="[PageExists]" sap:VirtualizedContainerService.HintSize="1024,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a46ca955-280f-42c1-b28f-c83d117fa62a" InformativeScreenshot="0089e39eec52d5ad7bff5572f6e1f409" Selector="&lt;webctrl tag='P' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[PageExists]" sap:VirtualizedContainerService.HintSize="1024,5937" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="988,5758" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
                    <Variable x:TypeArguments="x:String" Name="outputDT" />
                    <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="Taxonomy" />
                    <Variable x:TypeArguments="sd:DataSet" Name="extractCsv" />
                    <Variable x:TypeArguments="x:Boolean" Name="PageExists" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Data Scraping" sap:VirtualizedContainerService.HintSize="946,436" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'Automatio Page'" sap:VirtualizedContainerService.HintSize="434,344" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="edb26ccab284b5995555afef904485b7" Selector="&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;">
                      <ui:BrowserScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExtractData DelayBetweenPagesMS="{x:Null}" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extract Structured Data 'TBODY'" ExtractMetadata="&lt;extract&gt;&lt;row exact='1'&gt;&lt;webctrl tag='tr' /&gt;&lt;/row&gt;&lt;column exact='1' name='ID' attr='text'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='2' /&gt;&lt;/column&gt;&lt;column exact='1' name='DueDate' attr='text'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='3' /&gt;&lt;/column&gt;&lt;column exact='1' name='Invoice' attr='text' name2='InvoiceURL' attr2='href'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='4' /&gt;&lt;webctrl tag='a' idx='1' /&gt;&lt;webctrl tag='span' idx='1' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="ExtractData_1" MaxNumberOfResults="100" NextLinkSelector="&lt;webctrl id='tableSandbox_next' tag='A' /&gt;" SimulateClick="True">
                              <ui:ExtractData.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bd7e445c-1971-4d5d-9357-b7b6704fccb4" InformativeScreenshot="3b591d1c576f60c70b0ccc768c4df19f" Selector="&lt;webctrl tag='TBODY' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:ExtractData.Target>
                            </ui:ExtractData>
                          </Sequence>
                        </ActivityAction>
                      </ui:BrowserScope.Body>
                    </ui:BrowserScope>
                  </Sequence>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="946,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;data scrapping done&quot;]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExtractDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="946,5057" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="912,4937" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="870,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_ExtractedImagePath]" />
                          <Assign sap:VirtualizedContainerService.HintSize="870,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_ID]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="870,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_DueDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row(1).ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="870,4525" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[DateTime.ParseExact(row(1).ToString,&quot;dd-MM-yyyy&quot;, System.Globalization.CultureInfo.InvariantCulture) &lt;= DateTime.Now]" sap:VirtualizedContainerService.HintSize="828,4433" sap2010:WorkflowViewState.IdRef="If_2">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="792,4254" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="750,4162" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" Url="[row(3).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="716,4060" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="674,93" sap2010:WorkflowViewState.IdRef="LogMessage_14" Message="[row(3).ToString]" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="674,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[row(0).ToString+&quot; invoice is opened &quot;]" />
                                          <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe 12.jpg'" sap:VirtualizedContainerService.HintSize="674,3702" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="3fda1c15743d46f8630b9209b17c4b8b" Selector="&lt;html app='chrome.exe' title='*.jpg (*)' /&gt;">
                                            <ui:BrowserScope.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="640,3556" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="InvoiceID" />
                                                    <Variable x:TypeArguments="x:Boolean" Name="SaveImageTab" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="598,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG'" sap:VirtualizedContainerService.HintSize="598,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_RIGHT">
                                                    <ui:Click.CursorPosition>
                                                      <ui:CursorPosition Position="Center">
                                                        <ui:CursorPosition.OffsetX>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:CursorPosition.OffsetX>
                                                        <ui:CursorPosition.OffsetY>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:CursorPosition.OffsetY>
                                                      </ui:CursorPosition>
                                                    </ui:Click.CursorPosition>
                                                    <ui:Click.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="324ce5f3-d684-462b-a4b0-9e3e5298fa0f" InformativeScreenshot="c4e2a97e1da4fc489d4768eaeebe4c92" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                        <ui:Target.TimeoutMS>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:Target.TimeoutMS>
                                                        <ui:Target.WaitForReady>
                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                        </ui:Target.WaitForReady>
                                                      </ui:Target>
                                                    </ui:Click.Target>
                                                  </ui:Click>
                                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'menu item'" sap:VirtualizedContainerService.HintSize="598,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                    <ui:Click.CursorPosition>
                                                      <ui:CursorPosition Position="Center">
                                                        <ui:CursorPosition.OffsetX>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:CursorPosition.OffsetX>
                                                        <ui:CursorPosition.OffsetY>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:CursorPosition.OffsetY>
                                                      </ui:CursorPosition>
                                                    </ui:Click.CursorPosition>
                                                    <ui:Click.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="793765e7-1428-424b-811d-3e1c255874cc" InformativeScreenshot="7b16f925577dc173fe17e18b87ee626d" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_2' idx='*' /&gt;&lt;ctrl name='Save image as…' role='menu item' /&gt;">
                                                        <ui:Target.TimeoutMS>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:Target.TimeoutMS>
                                                        <ui:Target.WaitForReady>
                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                        </ui:Target.WaitForReady>
                                                      </ui:Target>
                                                    </ui:Click.Target>
                                                  </ui:Click>
                                                  <ui:UiElementExists DisplayName="Element Exists 'text  File name:'" Exists="[SaveImageTab]" sap:VirtualizedContainerService.HintSize="598,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                                                    <ui:UiElementExists.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4e93e5d9-cefa-4e14-8158-5e4133eeab47" InformativeScreenshot="4310421549c6b9a8aeb2f0b4f6432519" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;ctrl name='Explorer Pane' role='pane' /&gt;&lt;ctrl name='Folder Layout Pane' role='pane' /&gt;&lt;ctrl name='Details Pane' role='pane' /&gt;&lt;ctrl name='File name:' role='text' /&gt;">
                                                        <ui:Target.TimeoutMS>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:Target.TimeoutMS>
                                                        <ui:Target.WaitForReady>
                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                        </ui:Target.WaitForReady>
                                                      </ui:Target>
                                                    </ui:UiElementExists.Target>
                                                  </ui:UiElementExists>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="598,2964" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="556,134" sap2010:WorkflowViewState.IdRef="TypeInto_4" Text="[in_ExtractedImagePath+row(0).ToString+&quot;.jpg&quot;+ &quot;[k(enter)]&quot;]">
                                                      <ui:TypeInto.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5d2d69bc-71bd-4c38-863c-35580b3175e9" InformativeScreenshot="6fbbdab97cb737c4c20ffc42c3aa52e7" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:TypeInto.Target>
                                                    </ui:TypeInto>
                                                    <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="556,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="556,93" sap2010:WorkflowViewState.IdRef="LogMessage_13" Message="[row(0).ToString+&quot; invoice image is saved &quot;]" />
                                                    <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="556,22" sap2010:WorkflowViewState.IdRef="CloseTab_1" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0),row(1)}]" DataTable="[DT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="556,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="556,2093" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(in_ExtractedImagePath)]">
                                                      <ui:ForEach.Body>
                                                        <ActivityAction x:TypeArguments="x:String">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="x:String" Name="Image" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="520,1969" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="DocText" />
                                                              <Variable x:TypeArguments="p3:Document" Name="DOM" />
                                                              <Variable x:TypeArguments="p6:ClassificationResult[]" Name="RequiredData" />
                                                              <Variable x:TypeArguments="p6:ExtractionResult" Name="ExtractedData" />
                                                              <Variable x:TypeArguments="p6:ExtractionResult" Name="Validation" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="478,105" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[Taxonomy]" />
                                                            <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[Image]" DocumentText="[DocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="478,298" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                                                              <p:DigitizeDocument.OCREngine>
                                                                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                                  <ActivityFunc.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                                                  </ActivityFunc.Argument>
                                                                  <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" />
                                                                </ActivityFunc>
                                                              </p:DigitizeDocument.OCREngine>
                                                            </p:DigitizeDocument>
                                                            <p1:ClassifyDocumentScope ClassificationResults="[RequiredData]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[Image]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="478,441" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI7cc17b0ff44d49e4a5aace7d582425fc&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Account.ID.Invoices&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Account.ID.Invoices&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI7cc17b0ff44d49e4a5aace7d582425fc&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI7cc17b0ff44d49e4a5aace7d582425fc&quot;:[]}}">
                                                              <p1:ClassifyDocumentScope.Classifiers>
                                                                <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,114" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\InvoiceEx.json" PersistenceId="UI7cc17b0ff44d49e4a5aace7d582425fc">
                                                                  <p1:KeywordBasedClassifier.ClassifierResult>
                                                                    <OutArgument x:TypeArguments="p2:ClassifierResult">
                                                                      <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                                                                        <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
                                                                      </DelegateArgumentReference>
                                                                    </OutArgument>
                                                                  </p1:KeywordBasedClassifier.ClassifierResult>
                                                                  <p1:KeywordBasedClassifier.DocumentObjectModel>
                                                                    <InArgument x:TypeArguments="p3:Document">
                                                                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p1:KeywordBasedClassifier.DocumentObjectModel>
                                                                  <p1:KeywordBasedClassifier.DocumentPath>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p1:KeywordBasedClassifier.DocumentPath>
                                                                  <p1:KeywordBasedClassifier.DocumentText>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p1:KeywordBasedClassifier.DocumentText>
                                                                  <p1:KeywordBasedClassifier.DocumentTypes>
                                                                    <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                                                                      <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                                                                        <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p1:KeywordBasedClassifier.DocumentTypes>
                                                                </p1:KeywordBasedClassifier>
                                                              </p1:ClassifyDocumentScope.Classifiers>
                                                            </p1:ClassifyDocumentScope>
                                                            <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[RequiredData(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[Image]" DocumentText="[DocText]" ExtractionResult="[ExtractedData]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,522" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI7ddefc2d875e4affa8e1c0c82dce8093&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Account.ID.Invoices&quot;:{&quot;FieldMappings&quot;:{&quot;Account.ID.Invoices.InvoiceNo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Account.ID.Invoices.InvoiceNo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice-no\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Account.ID.Invoices.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Account.ID.Invoices.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Account.ID.Invoices.CompanyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Account.ID.Invoices.CompanyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Account.ID.Invoices.TotalDue&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Account.ID.Invoices.TotalDue&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI7ddefc2d875e4affa8e1c0c82dce8093&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI7ddefc2d875e4affa8e1c0c82dce8093&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;due-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-charges&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;item-po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;part-no&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                                                              <p4:DataExtractionScope.Extractors>
                                                                <p5:MachineLearningExtractor SelectedMLSkill="{x:Null}" ApiKey="Gv9ZDqnZGL1/5Bih3lRjBrzjzykZwa2gkG0YTAb6z/tK7aYqoK4VQcwxF9glmLnbjqudVo8YRRuCz4J3f/J23g==" Configuration="{}{&quot;Endpoint&quot;:&quot;https://invoices.uipath.com&quot;,&quot;ApiKey&quot;:&quot;VcdI5lD1rEBE8oQK7KmYbO9bgT8dz3SuoLXSnIcUl8MS+0UTcLrhz1pcrp4GAybgKm3m5sRl+54+zfwgBhG8Ew==&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor" Endpoint="https://invoices.uipath.com" sap:VirtualizedContainerService.HintSize="234,195" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_1" PersistenceId="UI7ddefc2d875e4affa8e1c0c82dce8093" RetryOnFailure="True" Timeout="100000" UseServerSideOCR="False">
                                                                  <p5:MachineLearningExtractor.AvailableMLSkills>
                                                                    <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True" />
                                                                  </p5:MachineLearningExtractor.AvailableMLSkills>
                                                                  <p5:MachineLearningExtractor.DocumentBounds>
                                                                    <InArgument x:TypeArguments="p6:ResultsDocumentBounds">
                                                                      <DelegateArgumentValue x:TypeArguments="p6:ResultsDocumentBounds">
                                                                        <DelegateInArgument x:TypeArguments="p6:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p5:MachineLearningExtractor.DocumentBounds>
                                                                  <p5:MachineLearningExtractor.DocumentObjectModel>
                                                                    <InArgument x:TypeArguments="p3:Document">
                                                                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p5:MachineLearningExtractor.DocumentObjectModel>
                                                                  <p5:MachineLearningExtractor.DocumentPath>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p5:MachineLearningExtractor.DocumentPath>
                                                                  <p5:MachineLearningExtractor.DocumentText>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p5:MachineLearningExtractor.DocumentText>
                                                                  <p5:MachineLearningExtractor.ExtractorDocumentType>
                                                                    <InArgument x:TypeArguments="p7:ExtractorDocumentType">
                                                                      <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                                                                        <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                      </DelegateArgumentValue>
                                                                    </InArgument>
                                                                  </p5:MachineLearningExtractor.ExtractorDocumentType>
                                                                  <p5:MachineLearningExtractor.ExtractorResult>
                                                                    <OutArgument x:TypeArguments="p7:ExtractorResult">
                                                                      <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                                                                        <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
                                                                      </DelegateArgumentReference>
                                                                    </OutArgument>
                                                                  </p5:MachineLearningExtractor.ExtractorResult>
                                                                </p5:MachineLearningExtractor>
                                                              </p4:DataExtractionScope.Extractors>
                                                            </p4:DataExtractionScope>
                                                            <p4:ExportExtractionResults DataSet="[extractCsv]" DisplayName="Export Extraction Results" ExtractionResult="[ExtractedData]" sap:VirtualizedContainerService.HintSize="478,177" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
                                                            <ui:MergeDataTable Destination="[DT1]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="478,134" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[extractCsv.Tables(0)]" />
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:ForEach.Body>
                                                    </ui:ForEach>
                                                    <ui:DeleteFolderX DisplayName="Delete Folder" sap:VirtualizedContainerService.HintSize="556,80" sap2010:WorkflowViewState.IdRef="DeleteFolderX_1" Path="[in_ExtractedImagePath]" Recursive="True" />
                                                  </Sequence>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:BrowserScope.Body>
                                          </ui:BrowserScope>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                  </ui:OpenBrowser>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="200,84.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="242,84" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:OpenBrowser.Body>
    </ui:OpenBrowser>
    <ui:WriteRange AddHeaders="True" DataTable="[DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="1100,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[in_SaveFolderPath+&quot;ExtractedData.xlsx&quot;]" />
    <ui:WriteRange AddHeaders="True" DataTable="[DT1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="1100,115" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" StartingCell="C1" WorkbookPath="[in_SaveFolderPath+&quot;ExtractedData.xlsx&quot;]" />
  </Sequence>
</Activity>